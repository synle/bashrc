// Preferences Open Keyboard Shortcuts (JSON)

[
  {
    "key": "alt+1",
    "command": "workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+3",
    "command": "workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+4",
    "command": "workbench.action.openEditorAtIndex4"
  },
  {
    "key": "alt+5",
    "command": "workbench.action.openEditorAtIndex5"
  },
  {
    "key": "alt+6",
    "command": "workbench.action.openEditorAtIndex6"
  },
  {
    "key": "alt+7",
    "command": "workbench.action.openEditorAtIndex7"
  },
  {
    "key": "alt+8",
    "command": "workbench.action.openEditorAtIndex8"
  },
  {
    "key": "alt+9",
    "command": "workbench.action.openEditorAtIndex9"
  },
  {
    "key": "f5",
    "command": "workbench.files.action.refreshFilesExplorer"
  },
  {
    "key": "alt+h",
    "command": "editor.action.startFindReplaceAction",
    "when": "editorFocus || editorIsOpen"
  },
  {
    "key": "alt+h",
    "command": "testing.toggleTestingPeekHistory",
    "when": "testing.isPeekVisible"
  },
  {
    "key": "alt+\\",
    "command": "workbench.action.toggleSidebarVisibility"
  },
  {
    "key": "alt+;",
    "command": "workbench.action.gotoLine"
  },
  {
    "key": "alt+m",
    "command": "workbench.action.toggleMaximizedPanel"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.gotoSymbol"
  },
  {
    "key": "ctrl+m",
    "command": "editor.action.jumpToBracket",
    "when": "editorFocus"
  },
  {
    "key": "alt+shift+l",
    "command": "editor.action.insertCursorAtEndOfEachLineSelected",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+\\",
    "command": "workbench.view.explorer"
  },
  {
    "key": "alt+shift+'",
    "command": "workbench.action.showAllSymbols"
  },
  {
    "key": "alt+ctrl+g",
    "command": "editor.action.selectHighlights"
  },
  {
    "key": "alt+ctrl+p",
    "command": "workbench.action.openWorkspace"
  },
  {
    "key": "alt+ctrl+p",
    "command": "projectManager.listProjects"
  },
  {
    "key": "alt+ctrl+c",
    "command": "workbench.files.action.compareWithSaved"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+f",
    "command": "actions.find"
  },
  {
    "key": "alt+shift+f",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "alt+'",
    "command": "workbench.action.debug.stepOver",
    "when": "debugState == 'stopped'"
  },
  {
    "key": "shift+alt+'",
    "command": "workbench.action.debug.stepInto",
    "when": "debugState != 'inactive'"
  },
  {
    "key": "f2",
    "command": "editor.action.rename",
    "when": "editorHasRenameProvider && editorTextFocus && !editorReadonly"
  },
  {
    "key": "f2",
    "command": "workbench.action.terminal.renameInstance",
    "when": "terminalHasBeenCreated && terminalTabsFocus && terminalTabsSingularSelection || terminalProcessSupported && terminalTabsFocus && terminalTabsSingularSelection"
  },
  {
    "key": "f2",
    "command": "debug.renameWatchExpression",
    "when": "watchExpressionsFocused"
  },
  {
    "key": "f2",
    "command": "debug.setVariable",
    "when": "variablesFocused"
  },
  {
    "key": "f2",
    "command": "remote.tunnel.label",
    "when": "tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "key": "f2",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "f2",
    "command": "abracadabra.renameSymbol",
    "when": "editorTextFocus"
  },
  {
    "key": "alt+shift+p",
    "command": "workbench.action.showCommands"
  },
  {
    "key": "alt+p",
    "command": "workbench.action.quickOpen"
  },
  {
    "key": "alt+right",
    "command": "cursorEnd",
    "when": "textInputFocus"
  },
  {
    "key": "alt+left",
    "command": "cursorHome",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+h",
    "command": "workbench.action.replaceInFiles"
  },
  {
    "key": "alt+a",
    "command": "editor.action.selectAll"
  },
  {
    "key": "alt+a",
    "command": "editor.action.webvieweditor.selectAll",
    "when": "!editorFocus && !inputFocus && activeEditor == 'WebviewEditor'"
  },
  {
    "key": "alt+a",
    "command": "list.selectAll",
    "when": "listFocus && listSupportsMultiselect && !inputFocus"
  },
  {
    "key": "alt+c",
    "command": "editor.action.clipboardCopyAction"
  },
  {
    "key": "alt+c",
    "command": "workbench.action.terminal.copySelection",
    "when": "terminalTextSelectedInFocused || terminalFocus && terminalHasBeenCreated && terminalTextSelected || terminalFocus && terminalProcessSupported && terminalTextSelected || terminalFocus && terminalTextSelected && terminalTextSelectedInFocused || terminalHasBeenCreated && terminalTextSelected && terminalTextSelectedInFocused || terminalProcessSupported && terminalTextSelected && terminalTextSelectedInFocused"
  },
  {
    "key": "alt+c",
    "command": "keybindings.editor.copyKeybindingEntry",
    "when": "inKeybindings && keybindingFocus && !whenFocus"
  },
  {
    "key": "alt+c",
    "command": "problems.action.copy",
    "when": "problemsVisibility && !relatedInformationFocus && focusedView == 'workbench.panel.markers.view'"
  },
  {
    "key": "alt+c",
    "command": "remote.tunnel.copyAddressInline",
    "when": "tunnelViewFocus && tunnelType == 'Detected' && tunnelViewMultiSelection == 'undefined' || tunnelViewFocus && tunnelType == 'Forwarded' && tunnelViewMultiSelection == 'undefined'"
  },
  {
    "key": "alt+c",
    "command": "search.action.copyMatch",
    "when": "fileMatchOrMatchFocus"
  },
  {
    "key": "alt+c",
    "command": "filesExplorer.copy",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "alt+x",
    "command": "editor.action.clipboardCutAction"
  },
  {
    "key": "alt+v",
    "command": "editor.action.clipboardPasteAction"
  },
  {
    "key": "alt+v",
    "command": "workbench.action.terminal.sendSequence",
    "when": "terminalFocus && !accessibilityModeEnabled && terminalShellType == 'pwsh'"
  },
  {
    "key": "alt+v",
    "command": "filesExplorer.paste",
    "when": "filesExplorerFocus && foldersViewVisible && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "alt+v",
    "command": "workbench.action.terminal.paste",
    "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
  },
  {
    "key": "alt+s",
    "command": "workbench.action.files.save"
  },
  {
    "key": "alt+l",
    "command": "expandLineSelection"
  },
  {
    "key": "alt+shift+s",
    "command": "workbench.action.files.saveAll"
  },
  {
    "key": "alt+z",
    "command": "undo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+shift+z",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+y",
    "command": "redo",
    "when": "textInputFocus && !editorReadonly"
  },
  {
    "key": "alt+ctrl+c",
    "command": "workbench.files.action.compareWithSaved"
  },
  {
    "key": "alt+shift+]",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "alt+shift+[",
    "command": "workbench.action.previousEditor"
  },
  {
    "key": "alt+w",
    "command": "workbench.action.closeActiveEditor"
  },
  {
    "key": "alt+d",
    "command": "workbench.action.splitEditor"
  },
  {
    "key": "alt+shift+d",
    "command": "workbench.action.splitEditorDown"
  },
  {
    "key": "alt+down",
    "command": "cursorPageDown",
    "when": "textInputFocus"
  },
  {
    "key": "alt+up",
    "command": "cursorPageUp",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+up",
    "command": "cursorPageUpSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+down",
    "command": "cursorPageDownSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+left",
    "command": "cursorHomeSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+shift+right",
    "command": "cursorEndSelect",
    "when": "textInputFocus",
    "args": {
      "sticky": false
    }
  },
  {
    "key": "alt+ctrl+left",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+up",
    "command": "cursorTop",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+shift+up",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+right",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+down",
    "command": "cursorBottom",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+shift+down",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+shift+left",
    "command": "cursorTopSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+ctrl+shift+right",
    "command": "cursorBottomSelect",
    "when": "textInputFocus"
  },
  {
    "key": "alt+n",
    "command": "workbench.action.files.newUntitledFile"
  },
  {
    "key": "alt+shift+n",
    "command": "workbench.action.newWindow"
  },
  {
    "key": "alt+d",
    "command": "editor.action.addSelectionToNextFindMatch"
  },
  {
    "key": "alt+/",
    "command": "editor.action.commentLine",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+[",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+]",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "alt+=",
    "command": "workbench.action.zoomIn"
  },
  {
    "key": "alt+-",
    "command": "workbench.action.zoomOut"
  },
  {
    "key": "alt+o",
    "command": "workbench.action.files.openFile"
  },
  {
    "key": "alt+`",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+g",
    "command": "editor.action.moveSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "alt+shift+g",
    "command": "editor.action.moveSelectionToPreviousFindMatch",
    "when": "editorFocus"
  }
]